name: 'Restore package dependencies from cache'
description: 'Restore package dependencies from cache'
inputs:
  key:
    description: 'An exact string match for the key. The key is used to create a unique identifier for the cache entry.'
    required: false
    default: flutter-pub-cache-${{ hashFiles('**/pubspec.lock') }}
  pub-cache-path:
    description: 'The path to the pub-cache directory (default: env.PUB_CACHE))'
    default: ''
    required: false
  fail-on-cache-miss:
    description: 'Fail the workflow if cache entry is not found'
    default: 'false'
    required: false
  enableCrossOsArchive:
    description: 'An optional boolean when enabled, allows windows runners to restore caches that were saved on other platforms'
    default: 'false'
    required: false
  lookup-only:
    description: 'Check if a cache entry exists for the given input(s) (key, restore-keys) without downloading the cache'
    default: 'false'
    required: false
outputs:
  cache-key:
    description: "The cache key that was used for restoring the cache."
    value: ${{ steps.pub-cache.outputs.cache-primary-key || inputs.key }}
  cache-hit:
    description: "A boolean value to indicate an exact match was found for the key."
    value: ${{ steps.pub-cache.outputs.cache-hit }}
runs:
  using: "composite"
  steps:
    - uses: actions/cache/restore@v3
      id: pub-cache
      with:
        path: .pub-cache # Workaround to enable cross os archive
        key: ${{ inputs.key }}
        fail-on-cache-miss: ${{ inputs.fail-on-cache-miss }}
        enableCrossOsArchive: ${{ inputs.enableCrossOsArchive }}
        lookup-only: ${{ inputs.lookup-only }}

    - name: Move pub cache to correct location
      run: |
        rm -rf "${{ inputs.pub-cache-path || env.PUB_CACHE }}"
        mv -T .pub-cache "${{ inputs.pub-cache-path || env.PUB_CACHE }}"
      if: ${{ steps.pub-cache.outputs.cache-hit == 'true' && inputs.lookup-only != 'true' }}
      shell: bash
