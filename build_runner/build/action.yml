name: 'Flutter build_runner caching Action'
description: 'Cache code generated by build_runner'
inputs:
  key:
    description: 'An exact string match for the key. The key is used to create a unique identifier for the cache entry.'
    required: false
    default: flutter-buildrunner-cache-${{ hashFiles('**/pubspec.lock', '**/*.dart') }}
  build-runner-flags:
    description: 'Flags to pass to build_runner'
    default: ''
    required: false
  fail-on-cache-miss:
    description: 'Fail the workflow if cache entry is not found'
    default: 'false'
    required: false
  enableCrossOsArchive:
    description: 'An optional boolean when enabled, allows windows runners to restore caches that were saved on other platforms'
    default: 'false'
    required: false
outputs:
  cache-key:
    description: "The cache key that was used for restoring the cache."
    value: ${{ steps.fetch-generated-code.outputs.cache-primary-key || inputs.key }}
  cache-hit:
    description: "A boolean value to indicate an exact match was found for the key."
    value: ${{ steps.restore.outputs.cache-hit }}
runs:
  using: "composite"
  steps:
    - uses: ilovelinux/flutter-cache-action/build_runner/restore@v1
      id: restore
      with:
        key: ${{ inputs.key }}
        fail-on-cache-miss: ${{ inputs.fail-on-cache-miss }}
        enableCrossOsArchive: ${{ inputs.enableCrossOsArchive }}

    - if: ${{ steps.restore.outputs.cache-hit != 'true' }}
      shell: bash
      run: |
        echo ::notice::Code not found in cache. Generating...
        dart run build_runner build ${{ inputs.build-runner-flags }}
        echo ::notice::Code generated! Saving cache...

    - if: ${{ steps.restore.outputs.cache-hit != 'true' }}
      uses: ilovelinux/flutter-cache-action/build_runner/save@v1
      with:
        key: ${{ steps.restore.outputs.cache-key }}
        enableCrossOsArchive: ${{ inputs.enableCrossOsArchive }}
